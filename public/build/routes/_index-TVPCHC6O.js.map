{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\_index.tsx\");\n  import.meta.hot.lastModified = \"1690483627988.664\";\n}\n// REMIX HMR END\n\nimport { useTranslation } from \"react-i18next\";\nexport const meta = () => {\n  return [{\n    title: \"New Remix App\"\n  }, {\n    name: \"description\",\n    content: \"Welcome to Remix!\"\n  }];\n};\nexport default function Index() {\n  _s();\n  let {\n    t,\n    i18n\n  } = useTranslation();\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n  return <div style={{\n    fontFamily: \"system-ui, sans-serif\",\n    lineHeight: \"1.8\"\n  }}>\n      <button onClick={() => changeLanguage('es')}>Espa\u00F1ol</button>\n      <button onClick={() => changeLanguage('en')}>English</button>\n      <h1>{t(\"WelcomeMessage\")}</h1>\n      <ul>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/tutorials/blog\" rel=\"noreferrer\">\n            {t(\"QuickstartTutorial\")}\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/tutorials/jokes\" rel=\"noreferrer\">\n            {t(\"JokesTutorial\")}\n          </a>\n        </li>\n        <li>\n          <a target=\"_blank\" href=\"https://remix.run/docs\" rel=\"noreferrer\">\n          {t(\"RemixDocs\")}\n          </a>\n        </li>\n      </ul>\n    </div>;\n}\n_s(Index, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;AA2CM;AA1CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAIO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AACe,SAAR,QAAyB;AAC9B,KAAG;AACH,MAAI;AAAA,IACF;AAAA,IACA;AAAA,EACF,IAAI,eAAe;AACnB,QAAM,iBAAiB,SAAO;AAC5B,SAAK,eAAe,GAAG;AAAA,EACzB;AACA,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,YAAY;AAAA,IACZ,YAAY;AAAA,EACd,GACI;AAAA,uDAAC,YAAO,SAAS,MAAM,eAAe,IAAI,GAAG,0BAA7C;AAAA;AAAA;AAAA;AAAA,WAAoD;AAAA,IACpD,mDAAC,YAAO,SAAS,MAAM,eAAe,IAAI,GAAG,uBAA7C;AAAA;AAAA;AAAA;AAAA,WAAoD;AAAA,IACpD,mDAAC,QAAI,YAAE,gBAAgB,KAAvB;AAAA;AAAA;AAAA;AAAA,WAAyB;AAAA,IACzB,mDAAC,QACC;AAAA,yDAAC,QACC,6DAAC,OAAE,QAAO,UAAS,MAAK,oCAAmC,KAAI,cAC5D,YAAE,oBAAoB,KADzB;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,QACC,6DAAC,OAAE,QAAO,UAAS,MAAK,qCAAoC,KAAI,cAC7D,YAAE,eAAe,KADpB;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,mDAAC,QACC,6DAAC,OAAE,QAAO,UAAS,MAAK,0BAAyB,KAAI,cACpD,YAAE,WAAW,KADd;AAAA;AAAA;AAAA;AAAA,aAEA,KAHF;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,SAfF;AAAA;AAAA;AAAA;AAAA,WAgBA;AAAA,OAvBG;AAAA;AAAA;AAAA;AAAA,SAwBL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,cAAc;AACxB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
